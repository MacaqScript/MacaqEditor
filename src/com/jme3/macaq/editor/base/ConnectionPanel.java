/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jme3.macaq.editor.base;

import com.jme3.macaq.base.LogicConnection;
import com.jme3.macaq.base.LogicInConnection;
import java.awt.Color;
import java.awt.event.MouseEvent;
import javax.swing.SwingConstants;
import org.openide.nodes.Node;

/**
 *
 * @author Rickard <neph1 @ github>
 */
public class ConnectionPanel extends javax.swing.JPanel implements MacaqGuiComponent{

    private ComponentSelectedListener listener;
    private int id;
    private boolean inConnection;
    private boolean connected;
    private LogicConnection connection;
    private boolean selected;
    
    /**
     * Creates new form ConnectionPanel
     * @param connection
     */
    public ConnectionPanel(LogicConnection connection) {
        this.connection = connection;
        initComponents();
        if(connection instanceof LogicInConnection){
            inConnection = true;
        }
        marker.setVisible(false);
        inConnection = connection instanceof LogicInConnection;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        marker = new javax.swing.JPanel();

        setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        setMaximumSize(new java.awt.Dimension(50, 10));
        setMinimumSize(new java.awt.Dimension(50, 10));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(50, 10));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        nameLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 0, 10)); // NOI18N
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(nameLabel, org.openide.util.NbBundle.getMessage(ConnectionPanel.class, "ConnectionPanel.text_1")); // NOI18N
        nameLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        nameLabel.setMaximumSize(new java.awt.Dimension(50, 10));
        nameLabel.setMinimumSize(new java.awt.Dimension(50, 10));
        nameLabel.setName(""); // NOI18N
        nameLabel.setPreferredSize(new java.awt.Dimension(50, 10));

        marker.setBackground(new java.awt.Color(255, 51, 51));
        marker.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        marker.setMaximumSize(new java.awt.Dimension(10, 10));
        marker.setMinimumSize(new java.awt.Dimension(10, 10));
        marker.setName("connectedMarker"); // NOI18N
        marker.setPreferredSize(new java.awt.Dimension(10, 10));

        javax.swing.GroupLayout markerLayout = new javax.swing.GroupLayout(marker);
        marker.setLayout(markerLayout);
        markerLayout.setHorizontalGroup(
            markerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );
        markerLayout.setVerticalGroup(
            markerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(marker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(marker, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        nameLabel.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ConnectionPanel.class, "ConnectionPanel.nameLabel.AccessibleContext.accessibleName")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if(evt.getButton() == MouseEvent.BUTTON1 && listener != null){
            listener.onSelected(this);
        } else if (evt.getButton() == MouseEvent.BUTTON3 && listener != null){
            listener.onDisconnect(this);
        }
//        redirectMouseEvent(getParent(), evt);
    }//GEN-LAST:event_formMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel marker;
    private javax.swing.JLabel nameLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public int getId() {
        return id;
    }

    @Override
    public void setId(int id) {
        this.id = id;
    }

    @Override
    public void setSelectedListener(ComponentSelectedListener listener) {
        this.listener = listener;
    }

    public boolean isInConnection() {
        return inConnection;
    }

    public void setInConnection(boolean inConnection) {
        this.inConnection = inConnection;
        nameLabel.setHorizontalAlignment(inConnection ? SwingConstants.LEFT : SwingConstants.RIGHT);
    }

    public LogicConnection getConnection() {
        return connection;
    }

    public void setConnection(LogicConnection connection) {
        this.connection = connection;
    }
    
    public int getAbsX(){
        return getX() + getParent().getX() + getParent().getParent().getX() + (isInConnection() ? 0 : getWidth());
    }
    
    public int getAbsY(){
        return getY() + getParent().getY() + getParent().getParent().getY() + 4;
    }

    public boolean isConnected() {
        return connected;
    }

    public void setConnected(boolean connected) {
        this.connected = connected;
    }

    @Override
    public void setNode(Node node) {
    }

    @Override
    public Node getNode() {
        return null;
    }

    public boolean isSelected() {
        return selected;
    }

    public void setSelected(boolean selected) {
        this.selected = selected;
    }
    
}
